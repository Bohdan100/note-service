plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'corp'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
//  Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

//  Spring MVC
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//  Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

//  Spring Data
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.h2database:h2'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.flywaydb:flyway-mysql'

//  Lombok - data annotations
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-logging'

//  Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.11.2'
}

tasks.named('test') { useJUnitPlatform() }

bootJar {
    archiveFileName = "${archiveBaseName.get()}.jar"
    destinationDirectory = file("$rootDir")
}

tasks.register('runAllTests', JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    mainClass.set('corp.base.AllTestsLauncher')
}